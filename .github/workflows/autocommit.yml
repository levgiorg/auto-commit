name: Auto Commit
on:
  push:
    branches:
      - main
      
  schedule:
  - cron: "*/30 7-23 * * 1-6"  # Run every 30 minutes between 7am-11pm on Mon-Sat

jobs:
  auto_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3      
        with:
         persist-credentials: false
         fetch-depth: 0

      # Simpler approach that will actually work
      - name: Decide whether to commit
        id: should_commit
        run: |
          # Generate a random number between 1-100
          RAND=$((1 + RANDOM % 100))
          
          # Hour of day affects probability (simulates work hours)
          HOUR=$(date +"%H")
          
          # Set different probabilities based on time of day
          if [ $HOUR -ge 9 ] && [ $HOUR -le 17 ]; then
            # Working hours - higher probability (50%)
            THRESHOLD=50
          elif [ $HOUR -ge 7 ] && [ $HOUR -le 23 ]; then
            # Early morning or evening - medium probability (25%)
            THRESHOLD=25
          else
            # Late night - low probability (10%)
            THRESHOLD=10
          fi
          
          # Decide whether to commit
          if [ $RAND -le $THRESHOLD ]; then
            echo "Will make a commit (probability: $THRESHOLD%, random: $RAND)"
            echo "make_commit=true" >> $GITHUB_OUTPUT
          else
            echo "Will skip this run (probability: $THRESHOLD%, random: $RAND)"
            echo "make_commit=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Last Update Timestamp
        if: steps.should_commit.outputs.make_commit == 'true'
        run: |
          d=`date '+%Y-%m-%dT%H:%M:%SZ'`
          echo $d > LAST_UPDATED
          
          # Create or update activity log with random content
          if [ ! -f activity_log.md ]; then
            echo "# Activity Log" > activity_log.md
            echo "" >> activity_log.md
          fi
          
          # Possible activities for more variety
          ACTIVITIES=("Updated documentation" "Fixed typo" "Added note" "Updated timestamp" "Refreshed data" "Recorded progress" "Tracked changes" "Documented work" "Logged activity" "Made improvement" "Refactored code" "Optimized workflow" "Enhanced feature" "Streamlined process")
          ACTIVITY=${ACTIVITIES[$RANDOM % ${#ACTIVITIES[@]}]}
          
          # Add a note with different text each time
          echo "- $ACTIVITY at $d" >> activity_log.md
          
      - name: Configure Git
        if: steps.should_commit.outputs.make_commit == 'true'
        run: |
          git config --local user.email "levgiorg@gmail.com"
          git config --local user.name "levgiorg"
          git add -A
          
          # Array of creative commit messages
          arr[0]="✨ feat: automated contribution to keep the streak alive"
          arr[1]="🌱 chore: nurturing my GitHub garden"
          arr[2]="📊 stats: keeping my contribution graph green"
          arr[3]="🤖 bot: beep boop, automated commit"
          arr[4]="🚀 update: launching another day of contributions"
          arr[5]="🔄 sync: synchronizing with the GitHub universe"
          arr[6]="📝 docs: documenting another productive day"
          arr[7]="🎯 goal: hitting my daily commit target"
          arr[8]="🧩 add: another piece to my GitHub puzzle"
          arr[9]="⏱️ time: marking the passage of another dev day"
          arr[10]="🌿 branch: growing my GitHub forest"
          arr[11]="🤓 code: just wrote some excellent invisible code"
          arr[12]="🎮 achievement: daily GitHub contribution unlocked"
          arr[13]="☕ brew: fresh pot of commits coming up"
          arr[14]="🏆 win: another successful day in the books"
          arr[15]="📈 growth: steady progress on the contribution chart"
          arr[16]="📋 task: checked another item off the list"
          arr[17]="🔧 chore: routine maintenance"
          arr[18]="📌 mark: logging daily progress"
          arr[19]="🔄 sync: keeping things up to date"
          
          # Select a random message
          rand=$[$RANDOM % ${#arr[@]}]
          
          # Create commit with the selected message
          git commit -m "${arr[$rand]}"
          
      - name: Push Changes
        if: steps.should_commit.outputs.make_commit == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
